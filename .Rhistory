source('E:/Coding/GitHub/GoldPrice/GoldPrice.R', echo=TRUE)
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
alldata = data.frame()
startYear = 2015
endYear = 2016
tempY = startYear:endYear
orgURL1 = 'http://www.gck99.com.tw/gold1.php?yy='
orgURL2 = '&mm='
for (y in tempY)
{
orgURL <- paste(orgURL1, y, orgURL2, sep = "")
#orgURL = 'http://www.gck99.com.tw/gold1.php?yy=2015&mm='
startPage = 1
endPage = 12
temp = startPage:endPage
strid = sprintf("%02d", temp)
for( i in startPage:endPage)
{
goldURL <- paste(orgURL, strid[i], sep='')
urlExists = url.exists(goldURL)
if(urlExists)
{
html = getURL(goldURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//tr[@class='main_1']//td[1]", xmlValue)
date = substr(datetemp,1,10)
price = xpathSApply(xml, "//tr[@class='main_1']//td[2]", xmlValue)
tempdata = data.frame(date, price)
}
alldata = rbind(alldata, tempdata)
}
}
write.csv(alldata,"goldPrice.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
}
usdURL
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
if(urlExists)
{
html = getURL(usdURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
usdtemp = xpathSApply(xml, "//td[2]", xmlValue)
usd = usdtemp[-1]
tempdata = data.frame(date, usd)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata,"usd.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
if(urlExists)
{
html = getURL(usdURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
usdtemp = xpathSApply(xml, "//td[2]", xmlValue)
usd = usdtemp[-1]
tempdata = data.frame(date, usd)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata,"USDollar.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
ferURL = 'http://www.cbc.gov.tw/lp.asp?CtNode=644&CtUnit=307&BaseDSD=32&mp=1&nowPage=1&pagesize=30'
alldata = data.frame()
urlExists = url.exists(ferURL)
if(urlExists)
{
html = getURL(ferURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
fxrtemp = xpathSApply(xml, "//td[2]", xmlValue)
fxr = usdtemp[-1]
tempdata = data.frame(date, fxr)
}
alldata = rbind(alldata, tempdata)
write.csv(alldata,"FXR.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
ferURL = 'http://www.cbc.gov.tw/lp.asp?CtNode=644&CtUnit=307&BaseDSD=32&mp=1&nowPage=1&pagesize=30'
alldata = data.frame()
urlExists = url.exists(ferURL)
if(urlExists)
{
html = getURL(ferURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
fxrtemp = xpathSApply(xml, "//td[2]", xmlValue)
fxr = fxrtemp[-1]
tempdata = data.frame(date, fxr)
}
alldata = rbind(alldata, tempdata)
write.csv(alldata,"FXR.csv")
library("quantmod")
install.packages('quantmod')
library("quantmod")
library("quantmod")
library("quantmod")
getFX(TWD/USD)
TWDUSD
getFX(TWD/USD)
getFX(NTD/USD)
NTDUSD
library("quantmod")
getFX(NTD/USD)
NTDUSD
library("quantmod")
getFX("USD/TWD", form = "2015-01-01")
USDTWD
library("quantmod")
alldata = data.frame()
getFX("USD/TWD", form = "2015-01-01")
tempdate = data.frame(date, ERU)
alldata = rbind(alldata, tempdata)
write.csv(alldata, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("ERU/TWD", form = "2015-01-01")
tempdate = data.frame(date, ERUTWD)
alldata = rbind(alldata, tempdata)
write.csv(alldata, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("ERU/TWD", form = "2015-01-01")
tempdate = data.frame(date,ERU.TWD)
alldata = rbind(alldata, tempdata)
write.csv(alldata, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("ERU/TWD", form = "2015-01-01")
tempdate = data.frame(date,ERU)
alldata = rbind(alldata, tempdata)
write.csv(alldata, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("ERU/TWD", form = "2015-01-01")
alldata = rbind(alldata, ERUTWD)
write.csv(alldata, "ERU.csv")
ERUTWD
library("quantmod")
alldata = data.frame()
getFX("TWD/ERU", form = "2015-01-01")
TWDERU
library("quantmod")
alldata = data.frame()
getFX("ERU/TWD", form = "2015-01-01")
ERUTWD
getFX("USD/TWD", form ="2015-01-01")
USDTWD
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
library("quantmod")
alldata = data.frame()
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
alldata = rbind(alldata, EURTWD)
write.csv(alldata, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
write.csv(EURTWD, "ERU.csv")
library("quantmod")
alldata = data.frame()
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
write.csv(EURTWD, "EUR.csv")
library("quantmod")
alldata = data.frame()
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
alldata = rbind(alldata, EURTWD)
write.csv(EURTWD, "ERU.csv")
getFX("EUR/TWD", form ="2015-01-01")
EURTWD$EUR.TWD
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
write.table(EURTWD, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
write.table(EURTWD, "ERU.csv", append = TRUE, row.names = FALSE, col.names = FALSE)
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EUR)
write.table(EURTWD, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EUR)
write.table(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EUR)
write.table(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EUR)
write.table(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EUR.TWD)
write.table(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EURTWD)
write.table(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
alldata = data.frame(date, EURTWD)
write.csv(alldata, "ERU.csv")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
print(ERUTWD)
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
print(EURTWD)
alldata = data.frame("", EUR.TWD)
alldata = data.frame("", ERU.TWD)
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
EURTWD
unlist(EURTWD)
class(EURTWD)
library(quantmod)
getFX("AUD/USD",from="2015-05-20")
class(AUDUSD)
write.zoo
function (x, file = "", index.name = "Index", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(AUDUSD, file="C://AUDUSD.csv", sep=",")
write.zoo(AUDUSD, "AUDUSD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "Index", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "date", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "date", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "Index", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "date", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "Index", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- date(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
class(EURTWD)
write.zoo
function (x, file = "", index.name = "Index", row.names = FALSE,
col.names = NULL, ...)
{
if (is.null(col.names))
col.names <- !is.null(colnames(x))
dx <- as.data.frame(x)
stopifnot(all(names(dx) != index.name))
dx[[index.name]] <- index(x)
dx <- dx[, c(ncol(dx), 1:(ncol(dx) - 1))]
write.table(dx, file = file, row.names = row.names, col.names = col.names,
...)
}
write.zoo(EURTWD, "EURTWD.csv", sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
write.zoo(ERUTWD,"EUR.csv",index.name="Date",sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
write.zoo(EURTWD,"EUR.csv",index.name="Date",sep=",")
library("quantmod")
getFX("EUR/TWD", form ="2015-01-01")
write.zoo(EURTWD,"EUR.csv",index.name="date",sep=",")
library("quantmod")
getFX("GBP/TWD", form ="2015-01-01")
write.zoo(GBPTWD,"GBP.csv",index.name="date",sep=",")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
if(urlExists)
{
html = getURL(usdURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
usdtemp = xpathSApply(xml, "//td[2]", xmlValue)
usd = usdtemp[-1]
tempdata = data.frame(date, usd)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata,"USD.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
if(urlExists)
{
html = getURL(usdURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
USDtemp = xpathSApply(xml, "//td[2]", xmlValue)
USD = usdtemp[-1]
tempdata = data.frame(date, USD)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata,"USD.csv")
rm(list=ls(all=TRUE))
library(XML)
library(bitops)
library(RCurl)
library(httr)
orgURL1 = 'http://www.cbc.gov.tw/lp.asp?CtNode=645&CtUnit=308&BaseDSD=32&mp=1&nowPage='
orgURL2 = '&pagesize=50'
startPage = 1
endPage = 8
alldata = data.frame()
temp = startPage:endPage
for( i in startPage:endPage)
{
usdURL <- paste(orgURL1, i, orgURL2, sep='')
urlExists = url.exists(usdURL)
if(urlExists)
{
html = getURL(usdURL, ssl.verifypeer = FALSE)
xml = htmlParse(html, encoding ='utf-8')
datetemp = xpathSApply(xml, "//td[1]", xmlValue)
date = datetemp[-1]
USDtemp = xpathSApply(xml, "//td[2]", xmlValue)
USD = USDtemp[-1]
tempdata = data.frame(date, USD)
}
alldata = rbind(alldata, tempdata)
}
write.csv(alldata,"USD.csv")
